[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "benchling-quilt-integration"
version = "0.4.12"
description = "Benchling-Quilt Integration Webhook Service"
license = {text = "MIT"}
authors = [
    {name = "Ernest Prabhakar", email = "ernest@quilt.bio"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "Flask==3.1.2",
    "boto3==1.40.60",
    "dataclasses-json>=0.5.2,<0.6.0",
    "python-dotenv==1.2.1",
    "structlog==25.5.0",
    "requests==2.32.5",
    "tenacity>=9.1.2",
    "benchling-sdk>=1.23.1",
    "quilt3>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-mock==3.15.1",
    "pytest-cov==7.0.0",
    "pytest-xdist==3.8.0",
    "black==25.9.0",
    "flake8==7.3.0",
    "isort==7.0.0",
]
docs = [
    "sphinx==8.2.3",
    "sphinx-rtd-theme==3.0.2",
]

[project.urls]
Homepage = "https://github.com/quiltdata/benchling-webhook"
Repository = "https://github.com/quiltdata/benchling-webhook.git"
Documentation = "https://github.com/quiltdata/benchling-webhook/tree/main/docker"
Issues = "https://github.com/quiltdata/benchling-webhook/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 119
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 119
known_first_party = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "local: Tests that require AWS access and can only run locally",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
